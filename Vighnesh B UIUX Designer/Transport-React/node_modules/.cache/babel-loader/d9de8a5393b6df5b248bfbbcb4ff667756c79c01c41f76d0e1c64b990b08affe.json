{"ast":null,"code":"var _jsxFileName = \"C:\\\\transport\\\\transport\\\\src\\\\components\\\\ExpensesChart-transport\\\\ExpensesChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { Chart, LineController, LineElement, PointElement, LinearScale, Title, CategoryScale } from \"chart.js\";\nimport \"./ExpensesChart.css\";\n\n// Register the required components for the Line chart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(LineController, LineElement, PointElement, LinearScale, Title, CategoryScale);\nconst ExpensesChart = () => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext(\"2d\");\n\n    // Destroy the previous chart instance if it exists to avoid canvas reuse error\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n    chartInstanceRef.current = new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n        datasets: [{\n          label: \"Expenses\",\n          data: [500, 700, 800, 1200, 900, 1400, 1500],\n          backgroundColor: \"rgba(106, 77, 243, 0.2)\",\n          borderColor: \"#6a4df3\",\n          fill: true\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n\n    // Cleanup function to destroy chart instance on component unmount\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpensesChart, \"0kidk2EAizBYKgfY+KQx4ULbe78=\");\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","LineController","LineElement","PointElement","LinearScale","Title","CategoryScale","jsxDEV","_jsxDEV","register","ExpensesChart","_s","chartRef","chartInstanceRef","ctx","current","getContext","destroy","type","data","labels","datasets","label","backgroundColor","borderColor","fill","options","responsive","maintainAspectRatio","className","children","id","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/transport/transport/src/components/ExpensesChart-transport/ExpensesChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Chart, LineController, LineElement, PointElement, LinearScale, Title, CategoryScale } from \"chart.js\";\r\nimport \"./ExpensesChart.css\";\r\n\r\n// Register the required components for the Line chart\r\nChart.register(LineController, LineElement, PointElement, LinearScale, Title, CategoryScale);\r\n\r\nconst ExpensesChart = () => {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext(\"2d\");\r\n\r\n    // Destroy the previous chart instance if it exists to avoid canvas reuse error\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy();\r\n    }\r\n\r\n    chartInstanceRef.current = new Chart(ctx, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n        datasets: [{\r\n          label: \"Expenses\",\r\n          data: [500, 700, 800, 1200, 900, 1400, 1500],\r\n          backgroundColor: \"rgba(106, 77, 243, 0.2)\",\r\n          borderColor: \"#6a4df3\",\r\n          fill: true\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false\r\n      }\r\n    });\r\n\r\n    // Cleanup function to destroy chart instance on component unmount\r\n    return () => {\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <canvas id=\"myChart\" ref={chartRef}></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,KAAK,EAAEC,cAAc,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAC9G,OAAO,qBAAqB;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,KAAK,CAACS,QAAQ,CAACR,cAAc,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,aAAa,CAAC;AAE5F,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMc,gBAAgB,GAAGd,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,MAAMgB,GAAG,GAAGF,QAAQ,CAACG,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;;IAE7C;IACA,IAAIH,gBAAgB,CAACE,OAAO,EAAE;MAC5BF,gBAAgB,CAACE,OAAO,CAACE,OAAO,CAAC,CAAC;IACpC;IAEAJ,gBAAgB,CAACE,OAAO,GAAG,IAAIf,KAAK,CAACc,GAAG,EAAE;MACxCI,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QACzDC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,UAAU;UACjBH,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;UAC5CI,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAE;QACR,CAAC;MACH,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;MACvB;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX,IAAIf,gBAAgB,CAACE,OAAO,EAAE;QAC5BF,gBAAgB,CAACE,OAAO,CAACE,OAAO,CAAC,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKqB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BtB,OAAA;MAAQuB,EAAE,EAAC,SAAS;MAACC,GAAG,EAAEpB;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACzB,EAAA,CA3CID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}